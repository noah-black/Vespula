#############################################################################
# Makefile for building: synthesizer
# Generated by qmake (2.01a) (Qt 4.8.1) on: Sun Sep 16 01:48:13 2012
# Project:  synthesizer.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile synthesizer.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/i386-linux-gnu -lasound -pthread -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = chorus.cpp \
		keyboard.cpp \
		looper.cpp \
		lpf.cpp \
		main.cpp \
		note.cpp \
		sawtooth.cpp \
		sine.cpp \
		square.cpp \
		synthesizer.cpp \
		triangle.cpp \
		vibrato.cpp moc_synthesizer.cpp
OBJECTS       = chorus.o \
		keyboard.o \
		looper.o \
		lpf.o \
		main.o \
		note.o \
		sawtooth.o \
		sine.o \
		square.o \
		synthesizer.o \
		triangle.o \
		vibrato.o \
		moc_synthesizer.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		synthesizer.pro
QMAKE_TARGET  = synthesizer
DESTDIR       = 
TARGET        = synthesizer

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: synthesizer.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/i386-linux-gnu/libQtGui.prl \
		/usr/lib/i386-linux-gnu/libQtCore.prl
	$(QMAKE) -o Makefile synthesizer.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_phonon.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/i386-linux-gnu/libQtGui.prl:
/usr/lib/i386-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile synthesizer.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/synthesizer1.0.0 || $(MKDIR) .tmp/synthesizer1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/synthesizer1.0.0/ && $(COPY_FILE) --parents chorus.h keyboard.h looper.h lpf.h note.h sawtooth.h sine.h soundprocessor.h square.h synthesizer.h triangle.h vibrato.h .tmp/synthesizer1.0.0/ && $(COPY_FILE) --parents chorus.cpp keyboard.cpp looper.cpp lpf.cpp main.cpp note.cpp sawtooth.cpp sine.cpp square.cpp synthesizer.cpp triangle.cpp vibrato.cpp .tmp/synthesizer1.0.0/ && (cd `dirname .tmp/synthesizer1.0.0` && $(TAR) synthesizer1.0.0.tar synthesizer1.0.0 && $(COMPRESS) synthesizer1.0.0.tar) && $(MOVE) `dirname .tmp/synthesizer1.0.0`/synthesizer1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/synthesizer1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_synthesizer.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_synthesizer.cpp
moc_synthesizer.cpp: keyboard.h \
		triangle.h \
		note.h \
		soundprocessor.h \
		sawtooth.h \
		square.h \
		sine.h \
		lpf.h \
		vibrato.h \
		looper.h \
		synthesizer.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) synthesizer.h -o moc_synthesizer.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

chorus.o: chorus.cpp chorus.h \
		soundprocessor.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o chorus.o chorus.cpp

keyboard.o: keyboard.cpp keyboard.h \
		triangle.h \
		note.h \
		soundprocessor.h \
		sawtooth.h \
		square.h \
		sine.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o keyboard.o keyboard.cpp

looper.o: looper.cpp looper.h \
		note.h \
		soundprocessor.h \
		keyboard.h \
		triangle.h \
		sawtooth.h \
		square.h \
		sine.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o looper.o looper.cpp

lpf.o: lpf.cpp lpf.h \
		soundprocessor.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o lpf.o lpf.cpp

main.o: main.cpp synthesizer.h \
		keyboard.h \
		triangle.h \
		note.h \
		soundprocessor.h \
		sawtooth.h \
		square.h \
		sine.h \
		lpf.h \
		vibrato.h \
		looper.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

note.o: note.cpp note.h \
		soundprocessor.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o note.o note.cpp

sawtooth.o: sawtooth.cpp sawtooth.h \
		note.h \
		soundprocessor.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o sawtooth.o sawtooth.cpp

sine.o: sine.cpp sine.h \
		note.h \
		soundprocessor.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o sine.o sine.cpp

square.o: square.cpp square.h \
		note.h \
		soundprocessor.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o square.o square.cpp

synthesizer.o: synthesizer.cpp synthesizer.h \
		keyboard.h \
		triangle.h \
		note.h \
		soundprocessor.h \
		sawtooth.h \
		square.h \
		sine.h \
		lpf.h \
		vibrato.h \
		looper.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o synthesizer.o synthesizer.cpp

triangle.o: triangle.cpp triangle.h \
		note.h \
		soundprocessor.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o triangle.o triangle.cpp

vibrato.o: vibrato.cpp vibrato.h \
		soundprocessor.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o vibrato.o vibrato.cpp

moc_synthesizer.o: moc_synthesizer.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_synthesizer.o moc_synthesizer.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

